name: CI
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
    # allow manual runs on branches without a PR

env:
  FORCE_COLOR: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-13]
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        include:
          - os: macos-14
            python-version: "3.12"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Setup uv
        uses: yezz123/setup-uv@v4
      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Install Nox-under-test (uv)
        run:  uv pip install --system .
      - name: Run tests on ${{ matrix.os }} (tox <4)
        run: nox --non-interactive --error-on-missing-interpreter --session "tests(python='${{ matrix.python-version }}', tox_version='<4')" -- --full-trace
      - name: Run tox-to-nox tests on ${{ matrix.os }} (tox latest)
        run: nox --non-interactive --error-on-missing-interpreter --session "tests(python='${{ matrix.python-version }}', tox_version='latest')" -- tests/test_tox_to_nox.py --full-trace
      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.job }}-${{ strategy.job-index }}
          path: .coverage.*

  coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup uv
        uses: yezz123/setup-uv@v4
      - name: Install Nox-under-test
        run:  uv pip install --system .
      - name: Download individual coverage reports
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -aR
      - name: Run coverage
        run: nox --non-interactive --session "cover"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Nox-under-test
        run: python -m pip install --disable-pip-version-check .
      - name: Lint
        run: nox --non-interactive --error-on-missing-interpreter --session "lint"
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup uv
        uses: yezz123/setup-uv@v4
      - name: Install Nox-under-test
        run:  uv pip install --system .
      - name: Docs
        run: nox --non-interactive --error-on-missing-interpreter --session "docs"
  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist and wheel
        run: pipx run build
      - name: Publish distribution PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
