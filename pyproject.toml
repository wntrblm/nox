[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "nox"
version = "2024.03.02"
description = "Flexible test automation."
readme = "README.md"
keywords = [
  "automation",
  "testing",
  "tox",
]
license = { text = "Apache-2.0" }
authors = [
  { name = "Alethea Katherine Flowers" },
  { email = "me@thea.codes" },
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Testing",
]
dependencies = [
  "argcomplete<4.0,>=1.9.4",
  "colorlog<7.0.0,>=2.6.1",
  'importlib-metadata; python_version < "3.8"',
  "packaging>=20.9",
  'typing-extensions>=3.7.4; python_version < "3.8"',
  "virtualenv>=20.14.1",
]
[project.optional-dependencies]
tox_to_nox = [
  "jinja2",
  "tox",
]
uv = [
  "uv",
]
[project.urls]
bug-tracker = "https://github.com/wntrblm/nox/issues"
documentation = "https://nox.thea.codes"
homepage = "https://github.com/wntrblm/nox"
repository = "https://github.com/wntrblm/nox"
[project.scripts]
nox = "nox.__main__:main"
tox-to-nox = "nox.tox_to_nox:main"

[tool.hatch]
metadata.allow-ambiguous-features = true # disable normalization (tox-to-nox) for back-compat

[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "C4",          # flake8-comprehensions
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PL",          # pylint
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
]
ignore = [
  "ISC001",  # Conflicts with formatter
  "PLR09",   # Too many X
  "PLR2004", # Magic value used in comparison
]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [ "-ra", "--strict-markers", "--strict-config" ]
xfail_strict = true
filterwarnings = [ "error" ]
log_cli_level = "info"
testpaths = [ "tests" ]

[tool.coverage.run]
branch = true
omit = [ "nox/_typing.py" ]
relative_files = true
source_pkgs = [ "nox" ]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "if TYPE_CHECKING:", "@overload" ]

[tool.mypy]
files = [ "nox/**/*.py", "noxfile.py" ]
python_version = "3.7"
strict = true
warn_unreachable = true
enable_error_code = [ "ignore-without-code", "redundant-expr", "truthy-bool" ]

[[tool.mypy.overrides]]
module = [ "argcomplete", "colorlog.*", "py", "tox.*" ]
ignore_missing_imports = true
